EXPAND_PREFIX?=expand
EXPANDED_DISK?=$(ROOT_DIR)/tests/$(EXPAND_PREFIX).testdisk.qcow2
GINKGO?="github.com/onsi/ginkgo/v2/ginkgo"

GINKGO_ARGS?=-v --fail-fast -r --timeout=3h

.PHONY: prepare-test
prepare-test:
ifeq ("$(DISK)","")
	@echo "No disk image found, run 'make build-disk' first"
	@exit 1
endif
	@scripts/run_vm.sh start $(DISK)
	@echo "VM started from $(DISK)"

.PHONY: test-active
test-active: prepare-test
	VM_PID=$$(scripts/run_vm.sh vmpid) go run $(GINKGO) $(GINKGO_ARGS) ./tests/wait-active

.PHONY: prepare-installer-test
prepare-installer-test:
ifeq ("$(ISO)","")
	@echo "No ISO image found, run 'make build-iso' first"
	@exit 1
endif
	@scripts/run_vm.sh start $(ISO)
	@echo "VM started from $(ISO)"

.PHONY: test-clean-%
test-clean-%: test-stop-%
	@ELMNTL_PREFIX=$* scripts/run_vm.sh clean

.PHONY: test-stop-%
test-stop-%:
	@ELMNTL_PREFIX=$* scripts/run_vm.sh stop

.PHONY: test-stop-all
test-stop-all: test-stop-upgrade test-stop-fallback test-stop-recovery test-stop-fsck test-stop-grubfallback test-stop-smoke test-stop-expand

.PHONY: test-clean-all
test-clean-all: test-clean-upgrade test-clean-fallback test-clean-recovery test-clean-fsck test-clean-grubfallback test-clean-smoke test-clean-expand

.PHONY: test-installer
test-installer: prepare-installer-test
	VM_PID=$$(scripts/run_vm.sh vmpid) go run $(GINKGO) $(GINKGO_ARGS) ./tests/installer
	VM_PID=$$(scripts/run_vm.sh vmpid) go run $(GINKGO) $(GINKGO_ARGS) ./tests/smoke

.PHONY: test-disk-all
test-disk-all: test-upgrade test-fallbak test-fsck test-recovery test-grubfallback test-smoke

.PHONY: test-%
test-%: prepare-test-%
	echo $@
	VM_PID=$$(ELMNTL_PREFIX=$* scripts/run_vm.sh vmpid) go run $(GINKGO) $(GINKGO_ARGS) ./tests/$*

.PHONY: test-A
test-A: test-upgrade test-fallback test-smoke

.PHONY: test-B
test-B: test-fsck test-recovery test-grubfallback

.PHONY: test-disk-expand
test-disk-expand: prepare-expanded-disk
	echo $@
	VM_PID=$$(ELMNTL_PREFIX=expand scripts/run_vm.sh vmpid) && [ -n $$VM_PID ] && go run $(GINKGO) $(GINKGO_ARGS) ./tests/wait-active
	ELMNTL_PREFIX=expand scripts/run_vm.sh stop

.PHONY: prepare-expanded-disk
prepare-expanded-disk:
ifeq ("$(DISK)","")
	echo "No disk image found, run 'make build-disk' first"
	exit 1
endif
	echo $@
	[ -f $(EXPANDED_DISK) ] || (ELMNTL_PREFIX=$(EXPAND_PREFIX) scripts/run_vm.sh start $(DISK) && echo "VM started from $(DISK)")

.PHONY: prepare-test-%
prepare-test-%: test-disk-expand
	echo $@
	[ -f $(EXPANDED_DISK) ] || (echo "No expanded disk image found!" && exit 1)
	ELMNTL_PREFIX=$* scripts/run_vm.sh start $(EXPANDED_DISK)
	echo "VM started from $(EXPANDED_DISK)"

.PHONY: test-deps
test-deps:
	go mod download
	go install github.com/onsi/gomega/...
	go install github.com/onsi/ginkgo/v2/ginkgo

.PHONY: test-cli
test-cli:
	go run $(GINKGO) --label-filter '!root' --fail-fast --race --covermode=atomic --coverprofile=coverage.txt --coverpkg=github.com/rancher/elemental-toolkit/... -p -r ${PKG}

.PHONY: test-root
test-root:
ifneq ($(shell id -u), 0)
	@echo "This tests require root/sudo to run."
	@exit 1
else
	go run $(GINKGO) run --label-filter root --fail-fast --race --covermode=atomic --coverprofile=coverage_root.txt --coverpkg=github.com/rancher/elemental-toolkit/... -procs=1 -r ${PKG}
endif


